<?xml version="1.0" encoding="UTF-8"?>
<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<groupId>com.voodoodyne.gstrap</groupId>
	<artifactId>gstrap-skeleton</artifactId>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<gstrap.version>0.37</gstrap.version>
		<postguice.version>0.8</postguice.version>
		<gae.version>1.9.48</gae.version>
		<guice.version>4.1.0</guice.version>
		<hibernate.version>5.2.10.Final</hibernate.version>
		<hibernate-validator.version>5.4.1.Final</hibernate-validator.version>
		<resteasy.version>3.1.4.Final</resteasy.version>
		<jackson.version>2.9.1</jackson.version>
		<slf4j.version>1.7.25</slf4j.version>
		<junit.jupiter.version>5.0.0</junit.jupiter.version>
		<junit.platform.version>1.0.0</junit.platform.version>

		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>

		<frontend.environment>dev</frontend.environment>

		<flyway.url>jdbc:postgresql:your-local-dev-database</flyway.url>
		<flyway.user>postgres</flyway.user>
	</properties>

	<prerequisites>
		<maven>3.3.9</maven>
	</prerequisites>

	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.18</version>
			<scope>provided</scope> <!-- excluded from manifest classpath, and excluded from WEB-INF/lib -->
		</dependency>

		<dependency>
			<groupId>com.voodoodyne.gstrap</groupId>
			<artifactId>gstrap</artifactId>
			<version>${gstrap.version}</version>
		</dependency>
		<dependency>
			<groupId>com.voodoodyne.gstrap</groupId>
			<artifactId>gstrap-test</artifactId>
			<version>${gstrap.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.voodoodyne.postguice</groupId>
			<artifactId>postguice</artifactId>
			<version>${postguice.version}</version>
		</dependency>
		<dependency>
			<groupId>com.voodoodyne.postguice</groupId>
			<artifactId>postguice-test</artifactId>
			<version>${postguice.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-1.0-sdk</artifactId>
			<version>${gae.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>${guice.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-servlet</artifactId>
			<version>${guice.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>22.0</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate-validator.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-java8</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.1.3</version>
		</dependency>
		<dependency>
			<groupId>com.google.cloud.sql</groupId>
			<artifactId>postgres-socket-factory</artifactId>
			<version>1.0.3</version>
		</dependency>

		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>com.voodoodyne.jackson.jsog</groupId>
			<artifactId>jackson-jsog</artifactId>
			<version>1.1.1</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-guava</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<version>${resteasy.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-guice</artifactId>
			<version>${resteasy.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson2-provider</artifactId>
			<version>${resteasy.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- For tests -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.8.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.8.47</version>
		</dependency>
	</dependencies>

	<build>
		<!-- for hot reload of the web application-->
		<outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory>

		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>display-dependency-updates</goal>
							<goal>display-plugin-updates</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20</version>
				<configuration>
					<systemPropertyVariables>
						<java.util.logging.config.file>src/test/resources/logging.properties</java.util.logging.config.file>
					</systemPropertyVariables>
					<argLine>-Xmx2G</argLine>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.junit.platform</groupId>
						<artifactId>junit-platform-surefire-provider</artifactId>
						<version>${junit.platform.version}</version>
					</dependency>
					<dependency>
						<groupId>org.junit.jupiter</groupId>
						<artifactId>junit-jupiter-engine</artifactId>
						<version>${junit.jupiter.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>appengine-maven-plugin</artifactId>
				<version>1.3.1</version>
				<configuration>
					<!-- dev appserver configuration (standard environment only) -->
					<!--
					<devserver.host>127.0.0.1</devserver.port>
					<devserver.port>8080</devserver.port>
					-->
					<!-- staging configuration (standard/flex-compat environment only) -->
					<!--
					<stage.enableJarSplitting>true</stage.enableJarSplitting>
					-->
					<!-- staging configuration (flexible environment only) -->
					<!--
					<stage.artifact>target/some-customer-artifact.jar</stage.artifact>
					-->

					<stage.enableJarClasses>true</stage.enableJarClasses>

					<!-- deploy configuration -->
					<deploy.promote>true</deploy.promote>
					<deploy.stopPreviousVersion>true</deploy.stopPreviousVersion>
					<deployables>
						<param>${project.build.directory}/appengine-staging/app.yaml</param>
						<param>${project.build.directory}/appengine-staging/WEB-INF/appengine-generated/queue.yaml</param>
						<param>${project.build.directory}/appengine-staging/WEB-INF/appengine-generated/cron.yaml</param>
					</deployables>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<version>4.2.0</version>
				<configuration>
					<locations>
						<location>filesystem:db/migration</location>
					</locations>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>deployed</id>	<!-- When we are actually deploying to GAE -->
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.6.0</version>
						<executions>
							<execution>
								<id>frontend-build</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bin/frontend-build.sh</executable>
									<arguments>
										<argument>${frontend.environment}</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>production</id>
			<properties>
				<frontend.environment>prod</frontend.environment>
				<flyway.url>jdbc:postgresql://google/houston_prod?useSSL=false&amp;socketFactoryArg=YOURPROJECTID:us-central1:YOURSQLINSTANCE&amp;socketFactory=com.google.cloud.sql.postgres.SocketFactory</flyway.url>
				<flyway.user>run</flyway.user>
				<flyway.password>YOUR_PRODUCTION_PASSWORD</flyway.password>
			</properties>
		</profile>

		<profile>
			<id>sandbox</id>
			<properties>
				<flyway.url>jdbc:postgresql://google/sandbox?useSSL=false&amp;socketFactoryArg=YOURPROJECTID:us-central1:YOURSQLINSTANCE&amp;socketFactory=com.google.cloud.sql.postgres.SocketFactory</flyway.url>
				<flyway.password>YOUR_SANDBOX_PASSWORD</flyway.password>
			</properties>
		</profile>

		<profile>
			<id>test</id>
			<properties>
				<flyway.url>jdbc:postgresql:your-test-template-database</flyway.url>
			</properties>
		</profile>
	</profiles>
</project>
