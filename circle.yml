version: 2

jobs:
  build:
    docker:
      - image: orbitkit/houston-primary:0.0.2 # has recent gcloud to cut down on install time
      - image: circleci/postgres:9.6
        environment:
          POSTGRES_DB: your-test-template-database
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""

    environment:
      PROJECT_SANDBOX: your-sandbox-appid
      PROJECT_PRODUCTION: your-production-appid
      GCLOUD_SECRET_FILE: /tmp/gcloud-service-account-secret.json

    working_directory: ~/skeleton

    steps:
      - checkout
      - restore_cache:
          key: skeleton-{{ checksum "pom.xml" }}
      - run: mvn --batch-mode dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: skeleton-{{ checksum "pom.xml" }}
      - run: |
          sudo apt-get update && sudo apt-get install google-cloud-sdk google-cloud-sdk-app-engine-java
          /usr/bin/nodejs --version
          sudo npm cache clean -f
          sudo npm install -g n
          sudo n stable
          /usr/bin/nodejs --version
      - run: |
          mvn --batch-mode -Ptest flyway:migrate -X
          mvn --batch-mode package

      - store_test_results:
          path: target/surefire-reports

      # Deploy sandbox
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo $GCLOUD_SERVICE_KEY_SANDBOX | base64 --decode > $GCLOUD_SECRET_FILE
              gcloud auth activate-service-account --key-file $GCLOUD_SECRET_FILE
              gcloud config set project $PROJECT_SANDBOX
              mvn --batch-mode -P sandbox flyway:migrate -X
              mvn --batch-mode -P deployed,sandbox appengine:deploy -Dapp.deploy.version=snapshot -DskipTests=true
            fi

      # Deploy production
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "production" ]; then
              echo $GCLOUD_SERVICE_KEY_PRODUCTION | base64 --decode > $GCLOUD_SECRET_FILE
              gcloud auth activate-service-account --key-file $GCLOUD_SECRET_FILE
              gcloud config set project $PROJECT_PRODUCTION
              mvn --batch-mode -P production flyway:migrate -X
              mvn --batch-mode -P deployed,production appengine:deploy -Dapp.deploy.version=${CIRCLE_BUILD_NUM} -DskipTests=true
            fi
